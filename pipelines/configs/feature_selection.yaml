# Feature screening execution config

# Two core experts:  A (long-history core) and B (recent rich features)
filter: 
  enabled:  true
  params: 
    coverage_threshold:  0.4
    variance_threshold:  1.0e-8
    corr_threshold:  0.97
    vif_threshold:  20
    max_vif_iter:  20
    suffix_dedup:  ['_zn', '_mm']
    ic_targets:  ['target_logreturn', 'target_logsharpe_ratio']
    mi_targets:  ['target_binarytrend', 'target_drawdown_prob', 'target_sideway_detect']
    # Windows环境下的并行优化
    n_jobs:  4
    # 使用采样计算IC/MI以加速，不影响最终质量
    sample_frac:  0.8
    # 批量处理大小
    batch_size:  10000
  per_channel: 
    base:  {}
    rich:  {}

embedded: 
  enabled:  true
  params: 
    n_estimators:  300
    boruta_iterations:  20
    linear_cv:  5
    linear_max_iter:  2000
    sample_cap:  60000
    tree_max_features:  null
    n_jobs:  4  # Windows环境下控制并行度
    # GPU加速配置
    tree_backend:  xgboost  # 使用XGBoost的GPU实现
    use_gpu:  true
    # XGBoost GPU参数 (3.0.5版本)
    xgb_params:
      tree_method:  hist  # XGBoost 3.0使用hist
      device:  cuda:0     # 新API使用device参数
      predictor:  gpu_predictor
      max_bin:  256
      subsample:  0.8
      colsample_bytree:  0.8
    # CatBoost GPU参数  
    cat_params:
      task_type:  GPU
      devices:  0
    # LightGBM GPU参数
    lgb_params:
      device:  gpu
      gpu_platform_id:  0
      gpu_device_id:  0
      gpu_use_dp:  false  # 使用float32以提升速度
    # VSN（可选）：若已导出 tft_gating.csv，则在 Embedded 阶段一并纳入证据
    use_vsn:  true
    vsn_csv:  null   # 默认自动在 reports/feature_evidence/<Expert>/<channel>/ 下查找
  per_channel: 
    base:  {}
    rich:  {}

experts: 
  alpha_dir_tft: 
    name:  Alpha-Dir-TFT
    pkl_base:  data/merged/expert_group/Alpha-Dir-TFT-base/full_merged_with_fundamentals_Alpha-Dir-TFT-base.pkl
    pkl_rich:  data/merged/expert_group/Alpha-Dir-TFT-rich/full_merged_with_fundamentals_Alpha-Dir-TFT-rich.pkl
    periods:  ["1h", "4h", "1d"]
    targets:  ["target_binarytrend"]

  alpha_ret_tft: 
    name:  Alpha-Ret-TFT
    pkl_base:  data/merged/expert_group/Alpha-Ret-TFT-base/full_merged_with_fundamentals_Alpha-Ret-TFT-base.pkl
    pkl_rich:  data/merged/expert_group/Alpha-Ret-TFT-rich/full_merged_with_fundamentals_Alpha-Ret-TFT-rich.pkl
    periods:  ["1h", "4h", "1d"]
    targets:  ["target_logreturn", "target_logsharpe_ratio"]

  risk_prob_tft: 
    name:  Risk-Prob-TFT
    pkl_base:  data/merged/expert_group/Risk-Prob-TFT-base/full_merged_with_fundamentals_Risk-Prob-TFT-base.pkl
    pkl_rich:  data/merged/expert_group/Risk-Prob-TFT-rich/full_merged_with_fundamentals_Risk-Prob-TFT-rich.pkl
    periods:  ["1h", "4h", "1d"]
    targets:  ["target_drawdown_prob", "target_vol_jump_prob"]

  risk_reg_tft: 
    name:  Risk-Reg-TFT
    pkl_base:  data/merged/expert_group/Risk-Reg-TFT-base/full_merged_with_fundamentals_Risk-Reg-TFT-base.pkl
    pkl_rich:  data/merged/expert_group/Risk-Reg-TFT-rich/full_merged_with_fundamentals_Risk-Reg-TFT-rich.pkl
    periods:  ["1h", "4h", "1d"]
    targets:  ["target_max_drawdown", "target_realized_vol"]

  derivatives_micro: 
    name:  MicroStruct-Deriv-TFT
    pkl_base:  data/merged/expert_group/MicroStruct-Deriv-TFT-base/full_merged_with_fundamentals_MicroStruct-Deriv-TFT-base.pkl
    pkl_rich:  data/merged/expert_group/MicroStruct-Deriv-TFT-rich/full_merged_with_fundamentals_MicroStruct-Deriv-TFT-rich.pkl
    periods:  ["1h", "4h"]
    targets:  ["target_binarytrend", "target_logreturn"]

  onchain_fundflow: 
    name:  OnChain-ETF-TFT
    pkl_base:  data/merged/expert_group/OnChain-ETF-TFT-base/full_merged_with_fundamentals_OnChain-ETF-TFT-base.pkl
    pkl_rich:  data/merged/expert_group/OnChain-ETF-TFT-rich/full_merged_with_fundamentals_OnChain-ETF-TFT-rich.pkl
    periods:  ["1h", "4h", "1d"]
    targets:  ["target_fundflow_strength"]

  regime_gating: 
    name:  Regime-Gate
    pkl_base:  data/merged/expert_group/Regime-Gate-base/full_merged_with_fundamentals_Regime-Gate-base.pkl
    pkl_rich:  data/merged/expert_group/Regime-Gate-rich/full_merged_with_fundamentals_Regime-Gate-rich.pkl
    periods:  ["1h", "4h", "1d"]
    # Placeholder:  if you have regime labels, swap in here
    targets:  ["target_sideway_detect"]
    skip_selection:  true      # 整合型专家：从特征筛选中跳过，仅保留训练/路由接口

  breakout_levels: 
    name:  KeyLevel-Breakout-TFT
    pkl_base:  data/merged/expert_group/KeyLevel-Breakout-TFT-base/full_merged_with_fundamentals_KeyLevel-Breakout-TFT-base.pkl
    pkl_rich:  data/merged/expert_group/KeyLevel-Breakout-TFT-rich/full_merged_with_fundamentals_KeyLevel-Breakout-TFT-rich.pkl
    periods:  ["1h", "4h", "1d"]
    targets:  ["target_breakout_prob"]

  relative_strength: 
    name:  RelativeStrength-Spread-TFT
    pkl_base:  data/merged/expert_group/RelativeStrength-Spread-TFT-base/full_merged_with_fundamentals_RelativeStrength-Spread-TFT-base.pkl
    pkl_rich:  data/merged/expert_group/RelativeStrength-Spread-TFT-rich/full_merged_with_fundamentals_RelativeStrength-Spread-TFT-rich.pkl
    periods:  ["1h", "4h", "1d"]
    targets:  ["target_binarytrend", "target_logreturn"]

  factor_bridge: 
    name:  Factor-Bridge-TFT
    pkl_base:  data/merged/expert_group/Factor-Bridge-TFT-base/full_merged_with_fundamentals_Factor-Bridge-TFT-base.pkl
    pkl_rich:  data/merged/expert_group/Factor-Bridge-TFT-rich/full_merged_with_fundamentals_Factor-Bridge-TFT-rich.pkl
    periods:  ["1d"]
    # Placeholder target for style proxy evaluation
    targets:  ["target_logsharpe_ratio"]
    skip_selection:  true

# Split schemes
splits: 
  # Outer holdout for final judgment (kept untouched during search)
  outer_val: 
    mode:  days         # days | ratio
    days:  90           # if mode=days
    ratio:  0.2         # if mode=ratio
  # Inner rolling splits for stability checks & wrapper search
  inner: 
    n_splits:  5
    val_ratio:  0.2

# Time-aware permutation importance (per period)
permutation: 
  enabled:  true
  method:  cyclic_shift      # cyclic_shift | block_shuffle (future:  extend)
  block_len:  36             # default block length when period-specific not set
  block_len_by_period: 
    "1h":  36
    "4h":  36
    "1d":  36
  embargo:  0
  purge:  0
  embargo_by_period:  {}
  purge_by_period:  {}
  n_estimators:  300
  seed:  42
  group_cols:  ["symbol"]   # align by session/day via grouping; extend if session cols available
  repeats:  5
  # GPU加速配置
  use_gpu:  true
  n_jobs:  4  # Windows环境下的并行度
  tree_params:
    tree_method:  hist    # XGBoost 3.0使用hist
    device:  cuda:0       # 新API使用device参数
    max_bin:  256                # repeats for averaging delta metric

# TFT gating (optional embedded evidence)
tft_gating: 
  enabled:  false
  ckpt:  checkpoints/last.ckpt
  model_config:  configs/experts/Alpha-Dir-TFT/1h/base/model_config.yaml
  weights_config:  configs/experts/Alpha-Dir-TFT/1h/base/weights_config.yaml
  max_batches:  50
  tft_bonus:  0.2           # bonus weight when combining with tree+perm scores
  out_csv:  reports/feature_evidence/tft_gating.csv

# Aggregation & core set
aggregation: 
  weights_yaml:  null
  topk_core:  128
  # Stability:  fraction of (period,target) pairs where feature is in pairwise topK
  topk_per_pair:  64
  min_appear_rate:  0.5     # >=50% of pairs
  # 新增：跨 era 出现率阈值（需要 era 列）
  min_appear_rate_era:  0.6
  # 新增：Rich 通道质量权重（按 period）
  rich_quality_weights: 
    "1h":  0.9
    "4h":  1.0
    "1d":  1.0

# Wrapper search budgets (GA/RFE)
wrapper: 
  method:  rfe              # rfe | ga (switch to ga if resources allow)
  rfe: 
    patience:  10
    sample_cap:  50000
    # GPU加速
    use_gpu:  true
    n_jobs:  4
    # 批量评估以减少开销
    batch_eval:  true
    batch_size:  10
  ga:                    # 如需启用 GA 搜索，method: ga
    pop: 30
    gen: 15
    cx: 0.7
    mut: 0.1
    sample_cap: 50000
    # GPU加速与并行
    use_gpu:  true
    n_jobs:  4
    # 使用并行评估种群
    parallel_eval:  true
    multi_objective: false
    weights:
      classification: 1.0
      regression: 1.0
    # 新增：多 seed 运行以提升稳健性；留空或仅1个时回退单次 GA
    seeds: [42, 2025, 7]

# Finalization thresholds
finalize: 
  expert_only_max:  48      # max additional features beyond core per expert
  max_online_latency_ms:  2000  # hard budget placeholder (not enforced in code yet)
  outputs: 
    core_summary_csv:  reports/feature_evidence/aggregated_core.csv
    core_allowlist_txt:  configs/selected_features.txt
    optimized_allowlist_txt:  reports/feature_evidence/optimized_features.txt
    plus_allowlist_txt:  reports/feature_evidence/plus_features.txt
  post_validation: 
    enabled:  true
    method:  rolling
    n_splits:  5
    val_ratio:  0.2
    min_score:  null
  documentation: 
    summary:  true
  # 新增：对子集清单与全量特征做一次一致性对照评估
  forward_compare:
    enabled:  false


